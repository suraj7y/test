# Generated by Django 2.2.2 on 2019-07-18 10:25

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=200)),
                ('country_code', models.CharField(max_length=2)),
                ('mobile_code', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=200)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Country')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('fynoo_id', models.CharField(max_length=150, null=True)),
                ('company_name', models.CharField(max_length=350, null=True)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('mobile_code', models.CharField(default=0, max_length=3, null=True)),
                ('mobile_number', models.CharField(default=12, max_length=12, null=True)),
                ('profile_image', models.ImageField(null=True, upload_to='agent_image')),
                ('gender', models.CharField(max_length=100, null=True)),
                ('dob', models.CharField(max_length=100, null=True)),
                ('education', models.CharField(max_length=450, null=True)),
                ('bank_name', models.CharField(max_length=250, null=True)),
                ('iban_no', models.CharField(max_length=250, null=True)),
                ('maroof_link', models.CharField(max_length=300, null=True)),
                ('services', models.CharField(max_length=300, null=True)),
                ('created_by', models.CharField(max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('systemip', models.CharField(max_length=200, null=True)),
                ('system_name', models.CharField(max_length=200, null=True)),
                ('user_type', models.CharField(max_length=100, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='date joined')),
                ('role', models.CharField(max_length=50, null=True)),
                ('city', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='accounts.City')),
                ('country', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='accounts.Country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user_master',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
